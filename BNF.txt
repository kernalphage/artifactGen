world = list(definiton, NEWLINE)

definition -> "[" LITERAL "]" list(assignment,";")
// not sure if i want that as ":", or should it be = ?
// should target lists have a ";" as well?  
assignment -> list(lvalue, ",") ":" list(statement_expr, "|")

// todo: expand with an expression that allows @(#location_to_modify)
target_expr -> ("@" | "$" ) locator_expr

// person.height.cm for example 
locator_expr -> list(LITERAL, ".")

statement_expr -> list( base_expr , ",")

// TODO: Many tokens, as long as it doesn't include a ,?
base_expr -> list(LITERAL) | STRING | number_expr | rvalue | side_effect


number_expr -> NUMBER | list(NUMBER, ":")
side_effect -> TODO
// todo: functions arent' referenced anywhere
function -> "!" locator_expr "(" list(base_expr, ",") ")"
 
// TODO: shorthand for "what's on the left side" eg: 
// @height : #previous.@  
// TODO: variable expansion:
// width, height : #rect.width, #rect.height => width, height : ...#rect 
rvalue -> ("#","@","$") locator_expr
lvalue -> ("$")? locator_expr

MVP: 
* world
* definition,
* assignment,
* lvalue,
* locator,
* statement_expr,
*  base_expr
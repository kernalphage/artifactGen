
[IMPLEMENTED]
world = list(definiton, NEWLINE)
definition -> "[" LITERAL "]" list(assignment,";")
assignment -> list(lvalue, ",") ":" list(statement_expr, "|")
// person.height.cm for example 
locator_expr -> list(LITERAL, ".")
statement_expr -> list( base_expr , ",")
lvalue -> ("$")? locator_expr


[PLANNED CHANGES]
// todo: expand with an expression that allows @(#location_to_modify)
target_expr -> ("@" | "$" ) locator_expr
// TODO: Many tokens, as long as it doesn't include a ,?
base_expr -> list(LITERAL) | STRING | number_expr | rvalue | side_effect | function_expr
number_expr -> NUMBER | list(NUMBER, ":")
// TODO: shorthand for "what's on the left side" eg: 
// @height : #previous.@  
// TODO: variable expansion:
// width, height : #rect.width, #rect.height => width, height : ...#rect 
rvalue -> ("#","@","$") locator_expr

// TODO:
[NOT IMPLEMENTED]
side_effect -> lvalue equaity statement_expr
equality -> (= | += | *= | /= | -=)
function_expr -> "!" locator_expr "(" list(base_expr, ",") ")"
 

world = list(definiton, NEWLINE)

definition -> "[" LITERAL "]" list(assignment)
// not sure if i want that as ":", or should it be = ?
// should target lists have a ";" as well?  
assignment -> list(target_expr ) ":" list(statement_expr, "|")

// todo: expand with an expression that allows @(#location_to_modify)
// or "@material.place
target_expr -> ("@" | "$" ) locator_expr

// person.height.cm for example 
locator_expr -> list(LITERAL, ".")

statement_expr -> list( base_expr | side_effect , ";") 

base_expr -> list(LITERAL) | STRING | number_expr | definition_ref | tag_ref


number_expr -> NUMBER | list(NUMBER, ":")
side_effect -> TODO
definition_ref -> "#" locator_expr
tag_ref -> "{" locator_expr "}"
// todo: functions arent' referenced anywhere
function -> "!" locator_expr "(" list(base_expr, ",") ")"

/// definition: a group of statements will be applied to the  
// statement: a list of  

// this might simplify things, or complicate them. I'm not sure.
// it might actually just be locator too. 
reference -> ("#","@","$") locator_expr 


lvalue -> "$"? locator_expr